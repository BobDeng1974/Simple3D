#include "AllShader.h"
const char* glsl_light_vex = 
"attribute vec4 aPos;"
"attribute vec3 aNormal;"
"attribute vec2 aTex;"
"varying vec2 vTex;"
"varying vec3 vN;"
"varying vec3 vL;"
"varying vec3 vH;"
"uniform vec4 lightpos;"
"uniform vec4 eyepos;"
"uniform mat4 M;"
"uniform mat4 V;"
"uniform mat4 P;"
"uniform mat4 N;"
"void main()"
"{"
"    vec4 pos = aPos*M;"
"    gl_Position = aPos*M*V*P;"
"    vL = vec3(lightpos/lightpos.w)-vec3(pos/pos.w);"
"    vN = vec3(vec4(aNormal,1.0)*N);"
"    vTex = aTex;"
"    vH = vL+vec3(lightpos/lightpos.w)-vec3(eyepos/eyepos.w);"
"}"
;
const char* glsl_light_fra = 
"precision mediump float;"
"uniform vec4 lightColor;"
"uniform vec4 ambientColor;"
"uniform float ka;"
"uniform float kd;"
"uniform float ks;"
"uniform float ns;"
"uniform sampler2D sam;"
"varying vec2 vTex;"
"varying vec3 vN;"
"varying vec3 vL;"
"varying vec3 vH;"
"void main()"
"{"
"    float p, d;"
"    vec4 diffuceColor = texture2D(sam, vTex) * lightColor;"
"    vH = normalize(vH);"
"    vN = normalize(vN);"
"    vL = normalize(vL);"
"    p = ks*max(float(0.0), dot(vN, vH));"
"    p = pow(p, ns);"
"    d = kd*max(float(0.0), dot(vN, vL));"
"    gl_FragColor = ka*ambientColor + p*lightColor + d*diffuceColor;"
"}"
;
